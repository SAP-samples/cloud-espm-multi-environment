<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sap.refapps</groupId>
	<artifactId>espm</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<properties>
		<!-- Versions and classifiers to be shared by all modules -->
		<nw.cloud.jdk.version>1.8</nw.cloud.jdk.version>
		<nw.cloud.sdk.version>3.54.34</nw.cloud.sdk.version>
		<cxf.version>3.0.10</cxf.version>
		<cmis.version>1.0.0</cmis.version>
		<xs2security.version>0.29.1</xs2security.version>
		<derby.version>10.14.2.0</derby.version>
		<itutil.version>5.0.44</itutil.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Properties that hold the local server information required for local 
			integration testing -->
		<skipIntegrationTests>false</skipIntegrationTests>
		<local.server.root>${project.build.directory}/server</local.server.root>
		<local.server.host>localhost</local.server.host>
		<local.proxy.settings>--http-proxy-host proxy --http-proxy-port 8080
			--https-proxy-host proxy --https-proxy-port 8080</local.proxy.settings>
		<sap.cloud.sdk.version>3.20.3.1</sap.cloud.sdk.version>
		<sap.cloud.sdk.path>${project.build.directory}\install</sap.cloud.sdk.path>
		<!-- Property that holds the source path to the backend destinations -->
		<destinations.path>${basedir}/../destinations</destinations.path>
		<m2e.jaxrs.activation>false</m2e.jaxrs.activation>
		<local.server.jmx.port>9010</local.server.jmx.port>
		<local.server.http.port>8080</local.server.http.port>
		<local.server.https.port>8443</local.server.https.port>
		<local.server.ajp.port>8009</local.server.ajp.port>
		<olingo.version>2.0.7</olingo.version>
		<slf4j.version>1.7.12</slf4j.version>
		<junit.version>4.13.1</junit.version>
		<derby.version>10.9.1.0</derby.version>
		<eclipselink.version>2.6.4</eclipselink.version>
		<javax.servlet-api.version>3.0.1</javax.servlet-api.version>
		<httpclient.version>4.5.13</httpclient.version>
		<httpcore.version>4.4.5</httpcore.version>
		<cxf-rt-frontend-jaxrs.version>2.7.18</cxf-rt-frontend-jaxrs.version>

		<jackson-databind.version>[2.9.10,)</jackson-databind.version>
		<ngdbc.version>2.0.13</ngdbc.version>
		<postgresql.version>9.4.1212</postgresql.version>
		<commons-dbcp2.version>2.1.1</commons-dbcp2.version>
		<jettison.version>1.3.2</jettison.version>
		<maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
		<maven-war-plugin.version>3.0.0</maven-war-plugin.version>
		<maven-dependency-plugin.version>3.0.0</maven-dependency-plugin.version>
		<build-helper-maven-plugin.version>1.12</build-helper-maven-plugin.version>
		<maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
		<maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<neo-java-web-maven-plugin.version>2.110.19</neo-java-web-maven-plugin.version>
		<build-helper-maven-plugin.version>1.12</build-helper-maven-plugin.version>
		<pdfbox.version>1.8.11</pdfbox.version>
		<tomcat-dbcp.version>8.0.24</tomcat-dbcp.version>
		<google-guice.version>4.2.0</google-guice.version>
		<cloud-security-xsuaa.version>1.1.0</cloud-security-xsuaa.version>
		<commons-lang3.version>commons-lang3</commons-lang3.version>
	</properties>


	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>

	<organization>
		<name>SAP SE</name>
		<url>http://www.sap.com</url>
	</organization>

	<developers>
		<developer>
			<name>SAP Cloud Platform</name>
			<url>https://cloudplatform.sap.com</url>
			<organization>SAP SE</organization>
			<organizationUrl>http://www.sap.com/</organizationUrl>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>SAP Sample Code License Agreement</name>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<repositories>
		<repository>
			<id>central</id>
			<name>Maven Central Repository</name>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>EclipseLink</id>
			<url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
		</repository>
	</repositories>

	<modules>
		<module>commons/espm-cloud-jpa</module>
		<module>commons/espm-cloud-web</module>
		<module>commons/espm-common-ui</module>
		<module>neo/espm-cloud-web-neo</module>
		<module>neo/html5-neo</module>
		<module>cf/espm-cloud-web-cf</module>
		<module>cf/espm-ui-cf</module>
	</modules>

	<dependencyManagement>
		<dependencies>
		<!-- Dependency injection -->
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>${google-guice.version}</version>
			</dependency>
			
			<!-- Logging dependencies -->

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<scope>compile</scope>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- JPA Persistence Dependencies -->
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>eclipselink</artifactId>
				<version>${eclipselink.version}</version>
			</dependency>
			<!-- SAP Cloud Platfrom Neo SDK dependencies -->
			<dependency>
				<groupId>com.sap.cloud</groupId>
				<artifactId>neo-java-web-api</artifactId>
				<version>${sap.cloud.sdk.version}</version>
				<scope>provided</scope>
			</dependency>
			
			<!-- JEE Dependencies -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet-api.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpcore.version}</version>
				<scope>compile</scope>
			</dependency>

			<!-- OData Dependencies -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf-rt-frontend-jaxrs.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-api</artifactId>
				<version>${olingo.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-core</artifactId>
				<version>${olingo.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-jpa-processor-api</artifactId>
				<version>${olingo.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-api-annotation</artifactId>
				<version>${olingo.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-jpa-processor-core</artifactId>
				<version>${olingo.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- CMIS and PDFBox Dependencies -->
			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>pdfbox-app</artifactId>
				<version>${pdfbox.version}</version>
			</dependency>
			<!-- Test Dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>${derby.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jettison</groupId>
				<artifactId>jettison</artifactId>
				<version>${jettison.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>
			<!-- Persistency -->
			<dependency>
				<groupId>com.sap.db.jdbc</groupId>
				<artifactId>ngdbc</artifactId>
				<version>${ngdbc.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-dbcp2</artifactId>
				<version>${commons-dbcp2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-dbcp</artifactId>
				<version>${tomcat-dbcp.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>
			<!-- Security -->
			<dependency>
				<groupId>com.sap.cloud.security.xsuaa</groupId>
				<artifactId>api</artifactId>
				<version>${cloud-security-xsuaa.version}</version>
				<scope>provided</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version> <!-- prevent Maven warning -->
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>[${maven-dependency-plugin.version},)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.sap.cloud
										</groupId>
										<artifactId>
											neo-java-web-maven-plugin
										</artifactId>
										<versionRange>[${neo-java-web-maven-plugin.version},)</versionRange>
										<goals>
											<goal>install-sdk</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>[${build-helper-maven-plugin.version},)</versionRange>
										<goals>
											<goal>reserve-network-port</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
