<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">


	<parent>
		<groupId>com.sap.refapps</groupId>
		<artifactId>espm</artifactId>
		<version>1.0.0</version>
		<relativePath>../..</relativePath>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>espm-cloud-web-cf</artifactId>
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>com.sap.refapps</groupId>
			<artifactId>espm-cloud-jpa</artifactId>
			<version>${project.version}</version>

		</dependency>
		<dependency>
			<groupId>com.sap.refapps</groupId>
			<artifactId>espm-cloud-web</artifactId>
			<version>${project.version}</version>

		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<!-- <version>9.4.1212</version> -->
		</dependency>
		<!-- <dependency> <groupId>org.apache.commons</groupId> <artifactId>commons-dbcp2</artifactId> 
			<version>${commons-dbcp2.version}</version> <version>2.1.1</version> </dependency> -->

		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-dbcp</artifactId>
			<version>8.0.24</version>
			<scope>provided</scope>
		</dependency>

		<!-- Logging dependencies -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>${derby.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>${jettison.version}</version>
			<scope>test</scope>
		</dependency>

	<dependency>
		<groupId>com.sap.xs2.security</groupId>
		<artifactId>java-container-security</artifactId>
		<version>0.24.3</version>
		<scope>compile</scope>
	</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.basedir}/src/main/webapp/WEB-INF/lib</directory>
						</fileset>
						<fileset>
							<directory>${project.basedir}/../deploy</directory>
							<includes>
								<include>${project.artifactId}.war</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-installed</id>
						<phase>install</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<type>${project.packaging}</type>
									<destFileName>espm-cloud-web.war</destFileName>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.basedir}/../deploy</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
					<execution>
						<id>unpack-dependencies</id>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/test-classes</outputDirectory>
							<includeGroupIds>
								com.sap.ui5.core
							</includeGroupIds>
							<overWriteReleases>true</overWriteReleases>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version> <!-- prevent Maven warning -->
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>[${maven-dependency-plugin.version},)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.sap.cloud
										</groupId>
										<artifactId>
											neo-java-web-maven-plugin
										</artifactId>
										<versionRange>[${neo-java-web-maven-plugin.version},)</versionRange>
										<goals>
											<goal>install-sdk</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>[${build-helper-maven-plugin.version},)</versionRange>
										<goals>
											<goal>reserve-network-port</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- Static Code Quality Plugins -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven-pmd-plugin.version}</version>
					<configuration>
						<rulesets>
							<ruleset>rules/pmd/pmdRuleset.xml</ruleset>
						</rulesets>
						<skipEmptyReport>false</skipEmptyReport>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.sap.refapps</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<configuration>
						<outputFileFormat>xml</outputFileFormat>
						<consoleOutput>false</consoleOutput>
						<enableRSS>false</enableRSS>
						<linkXRef>false</linkXRef>
						<configLocation>rules/checkstyle/checkstyleChecks.xml</configLocation>
						<sourceDirectory>${basedir}/src</sourceDirectory>
						<encoding>${project.build.sourceEncoding}</encoding>
						<failOnViolation>true</failOnViolation>
						<violationSeverity>error</violationSeverity>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.sap.refapps</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findbugs-maven-plugin.version}</version>
					<configuration>
						<includeFilterFile>rules/findbugs/findbugsRules.xml</includeFilterFile>
						<findbugsXmlOutput>true</findbugsXmlOutput>
						<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
						<xmlOutput>true</xmlOutput>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.sap.refapps</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0</version>
						</dependency>
					</dependencies>
				</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[3.0.0,)
										</versionRange>
										<goals>
											<goal>
												unpack-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<!-- The profile "hcp" is activated by default, this assumes CMIS dependencies 
			need to be present on class path of the deployment environment. USE THIS 
			PROFILE IF YOU PLAN TO DEPLOY ON HANA CLOUD PLATFORM (HCP) -->
		<profile>
			<id>hcp</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- Static Code Quality Plugins -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>pmd</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>checkstyle</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>findbugs</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
